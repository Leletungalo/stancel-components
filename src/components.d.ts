/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface BankForm {}
  interface CreateCourse {
    'open': boolean;
  }
  interface DeleteVideos {
    'name': string;
    'open': any;
  }
  interface DisplayVideo {
    'heading': string;
    'id': string;
  }
  interface HomePage {}
  interface ImageCard {
    'description': string;
    'heading': string;
    'prince': number;
    'src': string;
    'sub_heading': string;
  }
  interface LoadingSpiner {}
  interface UpLoadForm {}
  interface VideoAndNote {
    'name': string;
    'open': any;
  }
  interface VideoCard {
    'description': string;
    'heading': string;
    'isloading': boolean;
    'prince': number;
    'src': string;
    'sub_heading': string;
  }
}

declare global {


  interface HTMLBankFormElement extends Components.BankForm, HTMLStencilElement {}
  var HTMLBankFormElement: {
    prototype: HTMLBankFormElement;
    new (): HTMLBankFormElement;
  };

  interface HTMLCreateCourseElement extends Components.CreateCourse, HTMLStencilElement {}
  var HTMLCreateCourseElement: {
    prototype: HTMLCreateCourseElement;
    new (): HTMLCreateCourseElement;
  };

  interface HTMLDeleteVideosElement extends Components.DeleteVideos, HTMLStencilElement {}
  var HTMLDeleteVideosElement: {
    prototype: HTMLDeleteVideosElement;
    new (): HTMLDeleteVideosElement;
  };

  interface HTMLDisplayVideoElement extends Components.DisplayVideo, HTMLStencilElement {}
  var HTMLDisplayVideoElement: {
    prototype: HTMLDisplayVideoElement;
    new (): HTMLDisplayVideoElement;
  };

  interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {}
  var HTMLHomePageElement: {
    prototype: HTMLHomePageElement;
    new (): HTMLHomePageElement;
  };

  interface HTMLImageCardElement extends Components.ImageCard, HTMLStencilElement {}
  var HTMLImageCardElement: {
    prototype: HTMLImageCardElement;
    new (): HTMLImageCardElement;
  };

  interface HTMLLoadingSpinerElement extends Components.LoadingSpiner, HTMLStencilElement {}
  var HTMLLoadingSpinerElement: {
    prototype: HTMLLoadingSpinerElement;
    new (): HTMLLoadingSpinerElement;
  };

  interface HTMLUpLoadFormElement extends Components.UpLoadForm, HTMLStencilElement {}
  var HTMLUpLoadFormElement: {
    prototype: HTMLUpLoadFormElement;
    new (): HTMLUpLoadFormElement;
  };

  interface HTMLVideoAndNoteElement extends Components.VideoAndNote, HTMLStencilElement {}
  var HTMLVideoAndNoteElement: {
    prototype: HTMLVideoAndNoteElement;
    new (): HTMLVideoAndNoteElement;
  };

  interface HTMLVideoCardElement extends Components.VideoCard, HTMLStencilElement {}
  var HTMLVideoCardElement: {
    prototype: HTMLVideoCardElement;
    new (): HTMLVideoCardElement;
  };
  interface HTMLElementTagNameMap {
    'bank-form': HTMLBankFormElement;
    'create-course': HTMLCreateCourseElement;
    'delete-videos': HTMLDeleteVideosElement;
    'display-video': HTMLDisplayVideoElement;
    'home-page': HTMLHomePageElement;
    'image-card': HTMLImageCardElement;
    'loading-spiner': HTMLLoadingSpinerElement;
    'up-load-form': HTMLUpLoadFormElement;
    'video-and-note': HTMLVideoAndNoteElement;
    'video-card': HTMLVideoCardElement;
  }
}

declare namespace LocalJSX {
  interface BankForm extends JSXBase.HTMLAttributes<HTMLBankFormElement> {}
  interface CreateCourse extends JSXBase.HTMLAttributes<HTMLCreateCourseElement> {
    'open'?: boolean;
  }
  interface DeleteVideos extends JSXBase.HTMLAttributes<HTMLDeleteVideosElement> {
    'name'?: string;
    'open'?: any;
  }
  interface DisplayVideo extends JSXBase.HTMLAttributes<HTMLDisplayVideoElement> {
    'heading'?: string;
    'id'?: string;
  }
  interface HomePage extends JSXBase.HTMLAttributes<HTMLHomePageElement> {}
  interface ImageCard extends JSXBase.HTMLAttributes<HTMLImageCardElement> {
    'description'?: string;
    'heading'?: string;
    'prince'?: number;
    'src'?: string;
    'sub_heading'?: string;
  }
  interface LoadingSpiner extends JSXBase.HTMLAttributes<HTMLLoadingSpinerElement> {}
  interface UpLoadForm extends JSXBase.HTMLAttributes<HTMLUpLoadFormElement> {}
  interface VideoAndNote extends JSXBase.HTMLAttributes<HTMLVideoAndNoteElement> {
    'name'?: string;
    'open'?: any;
  }
  interface VideoCard extends JSXBase.HTMLAttributes<HTMLVideoCardElement> {
    'description'?: string;
    'heading'?: string;
    'isloading'?: boolean;
    'prince'?: number;
    'src'?: string;
    'sub_heading'?: string;
  }

  interface IntrinsicElements {
    'bank-form': BankForm;
    'create-course': CreateCourse;
    'delete-videos': DeleteVideos;
    'display-video': DisplayVideo;
    'home-page': HomePage;
    'image-card': ImageCard;
    'loading-spiner': LoadingSpiner;
    'up-load-form': UpLoadForm;
    'video-and-note': VideoAndNote;
    'video-card': VideoCard;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


